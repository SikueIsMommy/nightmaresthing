--USE IN GAME







local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
local gamename = game.Name
local playerename = game.Players.LocalPlayer.Name
local hrp = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

local MainWindow = Rayfield:CreateWindow({
	Name = "Nightmares Is Mid",
	LoadingTitle = "Hi "..playerename,
	LoadingSubtitle = "by sikue",
	ConfigurationSaving = {
		Enabled = false,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},
        Discord = {
        	Enabled = false,
        	Invite = "sirius", -- The Discord invite code, do not include discord.gg/
        	RememberJoins = true -- Set this to false to make them join the discord every time they load it up
        },
	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Sirius Hub",
		Subtitle = "Key System",
		Note = "Join the discord (discord.gg/sirius)",
		FileName = "SiriusKey",
		SaveKey = true,
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "Hello"
	}
})

local Main = MainWindow:CreateTab("Main", 4483362458) -- Replace soon
local Farming = Main:CreateSection("Farming")
local Teleports = Main:CreateSection("Teleports")
local Misc = Main:CreateSection("Misc")



local infmoneytoggle = Main:CreateToggle({
	Name = "Inf Money Farm(Causes lag!)",
	CurrentValue = false,
	Flag = "Toggle4", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value2)

        if Value2 == false then
            game.Workspace.Gravity = 197
        end
    		-- The variable (Value) is a boolean on whether the toggle is true or false
	end,
})

--possible godmode game:GetService("ReplicatedStorage").GM_Activated:FireServer()4

while true do
    wait()
    if infmoneytoggle.CurrentValue == true then
        for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
            if v.Name == "Breakable_Vase" or "Breakable_Crate" then
             local vase = v:FindFirstChild("Vase")
             local crate = v:FindFirstChild("Wood_Crate")
            if crate then
                --hrp.CFrame = crate.CFrame
                game.Workspace.Gravity = 0
                for i2, v2 in pairs(v:GetDescendants()) do
                     if v2.Name == "ProximityPrompt" then
                         fireproximityprompt(v2, 1)
                     end
                end
            elseif vase then

               -- hrp.CFrame = vase.CFrame
                game.Workspace.Gravity = 0
                for i2, v2 in pairs(v:GetDescendants()) do
                     if v2.Name == "ProximityPrompt" then
                         fireproximityprompt(v2, 1)
                     end
                end

            end

                
            end
        end
    end
end
